# 1. LoFTR backbone 
backbone:
  type: 'resnetfpn'
  resolution: [8, 2]  
  initial_dim: 128
  block_dims: [128, 196, 256]

# 2. LoFTR transformer 
transformer:
  position_embedding:
    type: 'sine'
    dim:  256 # same as coarse n_embd
    max_shape: [256, 256] 
    temperature: 10000
    normalize: True
  coarse:
    n_embd: 256
    n_heads: 8 
    layer_names: ['self', 'cross']
    n_layers: 4
    attention: 'torchsdp'
    use_flash: true
    attn_dropout: 0.0
    proj_dropout: 0.0
    ffwd_dropout: 0.0
  fine:
    n_embd: 128 
    n_heads: 8
    layer_names: ['self', 'cross']
    n_layers: 1
    attention: 'torchsdp'
    use_flash: true
    attn_dropout: 0.0
    proj_dropout: 0.0
    ffwd_dropout: 0.0

# 3. LoFTR coarse-to-fine module 
coarse_to_fine:
  window: 5
  is_concat_enabled: True
  dim_coarse: 256 
  dim_fine: 128
  coarse_to_fine_ratio: 4

# 4. LoFTR matcher 
matcher:
  coarse:
    thr: 0.2
    border_rm: 2
    match_type: 'dual_softmax'
    temperature: 0.1
    gt_pad: True 
    train_num_gt_pad: 200
    train_coarse_percent: 0.4

dataset:
  megadepth:
    train:
      long_dim: 640 # >=32GB GPU is required for 840x840
      min_overlap_score: 0
      coarse_scale: 0.125
      div_factor: 8
      depth_padding: True
      image_padding: True
    val:
      long_dim: 640 # >=32GB GPU is required for 840x840
      min_overlap_score: 0
      coarse_scale: 0.125
      div_factor: 8
      depth_padding: True
      image_padding: True
    test:
      long_dim: 640
      min_overlap_score: 0
      coarse_scale: 0.125
      div_factor: 8
      image_padding: True
      depth_padding: True
  
trainer:
  sampler: 'scene_balance' # options: ['scene_balance', None]
  scene_balance:
    n_samples_per_subset: 200
    subset_replacement: True 
    shuffle: True 
    repeat: 1
    seed: 42
  loss:
    coarse:
      type: 'focal' # ['focal', 'cross_entropy']
      weight: 1.0
      focal_alpha: 0.25
      focal_gamma: 2.0
      pos_weight: 1.0
      neg_weight: 1.0
      spv_score_thr: 0.1 # for filtering valid coarse-level gt pairs. Fine level gts are filtered by correct_threshold, anyway.
    fine:
      type: 'l2_with_std' #[ 'l2_with_std', 'l2']
      weight: 1.0
      correct_thr: 1.0 # for filtering valid fine-level gts (some gt matches might fall out of the fine-level window)


      